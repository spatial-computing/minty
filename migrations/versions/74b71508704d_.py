"""empty message

Revision ID: 74b71508704d
Revises: 
Create Date: 2019-01-31 15:27:51.751217

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '74b71508704d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bash',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), server_default='', nullable=True),
    sa.Column('qml', sa.String(length=255), server_default='', nullable=True),
    sa.Column('dir', sa.String(length=255), server_default='', nullable=True),
    sa.Column('md5vector', sa.String(length=255), server_default='', nullable=True),
    sa.Column('output_dir_structure', sa.String(length=255), server_default='', nullable=True),
    sa.Column('start_time', sa.String(length=255), server_default='', nullable=True),
    sa.Column('end_time', sa.String(length=255), server_default='', nullable=True),
    sa.Column('datatime_format', sa.String(length=255), server_default='', nullable=True),
    sa.Column('layer_name', sa.String(length=255), server_default='', nullable=True),
    sa.Column('output', sa.String(length=255), server_default='', nullable=True),
    sa.Column('bounds', sa.String(length=255), server_default='', nullable=True),
    sa.Column('first_file', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('time_stamp', sa.String(length=255), server_default='', nullable=True),
    sa.Column('time_steps', sa.String(length=255), server_default='', nullable=True),
    sa.Column('time_format', sa.String(length=255), server_default='', nullable=True),
    sa.Column('target_json_path', sa.String(length=255), server_default='', nullable=True),
    sa.Column('server', sa.String(length=255), server_default='', nullable=True),
    sa.Column('port', sa.String(length=255), server_default='', nullable=True),
    sa.Column('bind', sa.String(length=255), server_default='', nullable=True),
    sa.Column('with_shape_file', sa.String(length=255), server_default='', nullable=True),
    sa.Column('dev_mode_off', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('tile_server_root', sa.String(length=255), server_default='', nullable=True),
    sa.Column('force_restart_tileserver', sa.String(length=255), server_default='', nullable=True),
    sa.Column('target_mbtiles_path', sa.String(length=255), server_default='', nullable=True),
    sa.Column('scp_to_default_server', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('scp_to_server', sa.String(length=255), server_default='', nullable=True),
    sa.Column('without_website', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('tiled_ext', sa.String(length=255), server_default='', nullable=True),
    sa.Column('ith_quality_assessment', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('disable_clip', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('disable_new_res', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('disable_raster_tile', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('disable_vector_tile', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('force_proj_first', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('with_south_sudan_shp', sa.Boolean(), server_default=sa.text('False'), nullable=True),
    sa.Column('command', sa.TEXT(), server_default='', nullable=True),
    sa.Column('data_file_path', sa.String(length=255), server_default='', nullable=True),
    sa.Column('chart_type', sa.String(length=255), server_default='', nullable=True),
    sa.Column('rqids', sa.TEXT(), server_default='', nullable=True),
    sa.Column('load_colormap', sa.String(length=255), server_default='', nullable=True),
    sa.Column('file_type', sa.String(length=255), server_default='', nullable=True),
    sa.Column('directory_structure', sa.String(length=255), server_default='', nullable=True),
    sa.Column('netcdf_subdataset', sa.String(length=255), server_default='', nullable=True),
    sa.Column('viz_config', sa.String(length=255), server_default='', nullable=True),
    sa.Column('status', sa.String(length=255), server_default='not enqueued', nullable=True),
    sa.Column('viz_type', sa.String(length=255), server_default='', nullable=True),
    sa.Column('logs', sa.TEXT(), server_default='', nullable=True),
    sa.Column('dataset_id', sa.String(length=255), server_default='', nullable=True),
    sa.Column('data_url', sa.String(), server_default='', nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), server_default='', nullable=True),
    sa.Column('standard_variables', sa.TEXT(), server_default='', nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('layer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layerid', sa.String(length=255), server_default='', nullable=False),
    sa.Column('processing_flag', sa.SmallInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('isdiff', sa.SmallInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('diff_layerid', sa.String(length=255), server_default='', nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=8), server_default='vector', nullable=True),
    sa.Column('tileformat', sa.String(length=8), server_default='pdf', nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('stdname', sa.String(length=255), nullable=False),
    sa.Column('md5', sa.String(length=255), nullable=False),
    sa.Column('sourcelayer', sa.String(), nullable=False),
    sa.Column('hasdata', sa.SmallInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('hastimeline', sa.SmallInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('maxzoom', sa.Integer(), server_default=sa.text('14'), nullable=True),
    sa.Column('minzoom', sa.Integer(), server_default=sa.text('3'), nullable=True),
    sa.Column('bounds', sa.String(length=255), nullable=True),
    sa.Column('mbfilename', sa.String(length=255), nullable=True),
    sa.Column('directory_format', sa.String(length=255), nullable=True),
    sa.Column('starttime', sa.DateTime(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('endtime', sa.DateTime(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('json_filename', sa.String(length=255), nullable=True),
    sa.Column('server', sa.String(length=255), nullable=True),
    sa.Column('tileurl', sa.String(length=255), nullable=True),
    sa.Column('legend', sa.TEXT(), nullable=True),
    sa.Column('uri', sa.TEXT(), nullable=True),
    sa.Column('valuearray', sa.TEXT(), nullable=True),
    sa.Column('vector_json', sa.TEXT(), nullable=True),
    sa.Column('colormap', sa.TEXT(), nullable=True),
    sa.Column('hotspot', sa.TEXT(), nullable=True),
    sa.Column('original_dataset_bounds', sa.TEXT(), nullable=True),
    sa.Column('mapping', sa.String(), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('steptype', sa.String(length=32), server_default='NULL', nullable=True),
    sa.Column('stepoption_type', sa.String(), server_default='NULL', nullable=True),
    sa.Column('stepoption_format', sa.String(), server_default='NULL', nullable=True),
    sa.Column('step', sa.String(length=255), server_default='NULL', nullable=True),
    sa.Column('axis', sa.String(length=32), server_default='NULL', nullable=True),
    sa.Column('dcid', sa.String(length=255), server_default='', nullable=True),
    sa.Column('styletype', sa.String(length=32), server_default='fill', nullable=True),
    sa.Column('legend_type', sa.String(length=16), server_default='linear', nullable=True),
    sa.Column('viz_type', sa.TEXT(), server_default='', nullable=True),
    sa.Column('title', sa.TEXT(), server_default='', nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metadata',
    sa.Column('k', sa.String(length=32), nullable=False),
    sa.Column('v', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('k')
    )
    op.create_table('original',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_name', sa.String(length=255), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=255), nullable=False),
    sa.Column('gdalinfo', sa.Text(), nullable=True),
    sa.Column('related_json', sa.Text(), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tileserverconfig',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layerid', sa.String(length=255), nullable=False),
    sa.Column('mbtiles', sa.String(length=255), nullable=False),
    sa.Column('md5', sa.String(length=255), nullable=False),
    sa.Column('layer_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tileserverconfig')
    op.drop_table('original')
    op.drop_table('metadata')
    op.drop_table('layer')
    op.drop_table('dataset')
    op.drop_table('bash')
    # ### end Alembic commands ###
